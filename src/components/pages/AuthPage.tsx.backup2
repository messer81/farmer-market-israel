import React, { useState } from 'react';
import {
  Box,
  Typography,
  Button,
  Container,
  Paper,
  Tabs,
  Tab,
  Alert,
  CircularProgress,
  Fade,
} from '@mui/material';
import { Agriculture, ArrowBack } from '@mui/icons-material';
import { useTranslation } from 'react-i18next';
import backgroundImage from '../../assets/images/Farm Sharing background.jpg';
import AuthFrame from './AuthFrame';
import { useLocation } from 'react-router-dom';

interface AuthPageProps {
  onBackClick: () => void;
  onAuthSuccess: () => void;
}

const AuthPage: React.FC<AuthPageProps> = ({ onBackClick, onAuthSuccess }) => {
  const { t } = useTranslation();
  const location = useLocation();
  // –ß–∏—Ç–∞–µ–º query-–ø–∞—Ä–∞–º–µ—Ç—Ä tab
  const params = new URLSearchParams(location.search);
  const initialTab = params.get('tab') === 'register' ? 1 : 0;
  const [activeTab, setActiveTab] = useState(initialTab);
  const [authOpen, setAuthOpen] = useState(params.get('tab') === 'register');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setActiveTab(newValue);
  };

  const handleAuthSuccess = () => {
    setAuthOpen(false);
    onAuthSuccess();
  };

  return (
    <div 
      style={{
        backgroundImage: `url(${backgroundImage})`,
        backgroundSize: 'cover',
        backgroundPosition: 'center',
        backgroundRepeat: 'no-repeat',
        backgroundAttachment: 'fixed',
        minHeight: '100vh',
        display: 'flex',
        flexDirection: 'column'
      }}
    >
      {/* –û–≤–µ—Ä–ª–µ–π */}
      <div
        style={{
          position: 'fixed',
          top: 0,
          left: 0,
          width: '100%',
          height: '100%',
          background: 'rgba(0, 0, 0, 0.3)',
          zIndex: 0
        }}
      />

      {/* –•–µ–¥–µ—Ä */}
      <Box sx={{ position: 'relative', zIndex: 1, p: 2 }}>
        <Button
          startIcon={<ArrowBack />}
          onClick={onBackClick}
          sx={{ color: 'white', textShadow: '1px 1px 2px rgba(0,0,0,0.5)' }}
        >
          –ù–∞–∑–∞–¥ / Back
        </Button>
      </Box>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <Container 
        maxWidth="sm" 
        sx={{ 
          flex: 1, 
          display: 'flex', 
          flexDirection: 'column', 
          justifyContent: 'center',
          position: 'relative',
          zIndex: 1,
          py: 4
        }}
      >
        <Fade in timeout={800}>
          <Paper 
            elevation={8}
            sx={{ 
              p: 4, 
              backgroundColor: 'rgba(255, 255, 255, 0.95)',
              backdropFilter: 'blur(10px)',
              borderRadius: 3
            }}
          >
            {/* –õ–æ–≥–æ—Ç–∏–ø */}
            <Box sx={{ textAlign: 'center', mb: 3 }}>
              <Agriculture 
                sx={{ 
                  fontSize: 60, 
                  color: '#4CAF50', 
                  mb: 1 
                }} 
              />
              <Typography variant="h4" color="#2E7D32" gutterBottom>
                üåæ Farm Market Israel
              </Typography>
            </Box>

            {/* –¢–∞–±—ã */}
            <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>
              <Tabs 
                value={activeTab} 
                onChange={handleTabChange} 
                centered
                sx={{
                  '& .MuiTab-root': {
                    color: '#666',
                    '&.Mui-selected': {
                      color: '#4CAF50'
                    }
                  }
                }}
              >
                <Tab label="–í–æ–π—Ç–∏ / Login" />
                <Tab label="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è / Register" />
              </Tabs>
            </Box>

            {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Ç–∞–±–æ–≤ */}
            <Box sx={{ mt: 3 }}>
              {activeTab === 0 ? (
                // –õ–æ–≥–∏–Ω
                <Box>
                  <Typography variant="h6" gutterBottom align="center">
                    –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!
                  </Typography>
                  <Typography variant="body2" color="text.secondary" align="center" sx={{ mb: 3 }}>
                    –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞—Ç–∞–ª–æ–≥—É
                  </Typography>
                  <Button
                    fullWidth
                    variant="contained"
                    size="large"
                    onClick={() => setAuthOpen(true)}
                    sx={{ 
                      backgroundColor: '#4CAF50',
                      '&:hover': { backgroundColor: '#2E7D32' },
                      py: 1.5
                    }}
                  >
                    –í–æ–π—Ç–∏ / Login
                  </Button>
                </Box>
              ) : (
                // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                <Box>
                  <Typography variant="h6" gutterBottom align="center">
                    –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
                  </Typography>
                  <Typography variant="body2" color="text.secondary" align="center" sx={{ mb: 3 }}>
                    –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–µ–∂–∏–º –ø—Ä–æ–¥—É–∫—Ç–∞–º
                  </Typography>
                  <Button
                    fullWidth
                    variant="contained"
                    size="large"
                    onClick={() => setAuthOpen(true)}
                    sx={{ 
                      backgroundColor: '#4CAF50',
                      '&:hover': { backgroundColor: '#2E7D32' },
                      py: 1.5
                    }}
                  >
                    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è / Register
                  </Button>
                </Box>
              )}
            </Box>

            {error && (
              <Alert severity="error" sx={{ mt: 2 }}>
                {error}
              </Alert>
            )}
          </Paper>
        </Fade>
      </Container>

      {/* –î–∏–∞–ª–æ–≥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
      <AuthFrame 
        open={authOpen} 
        onClose={() => setAuthOpen(false)}
        onSuccess={handleAuthSuccess}
        initialTab={activeTab}
      />
    </div>
  );
};

export default AuthPage; 
// ü•¨ –ü—Ä–æ–¥—É–∫—Ç
export interface Product {
  id: string;
  name: string;
  nameHe: string;          // –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ –∏–≤—Ä–∏—Ç–µ
  price: number;
  currency: 'ILS' | 'USD'; // –®–µ–∫–µ–ª–∏ –∏–ª–∏ –¥–æ–ª–ª–∞—Ä—ã
  category: ProductCategory;
  description: string;
  image: string;
  farmId: string;
  farmName: string;
  location: string;
  organic: boolean;
  inStock: boolean;
  unit: 'kg' | 'piece' | 'bunch';
}

// üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
export enum ProductCategory {
  VEGETABLES = 'vegetables',
  FRUITS = 'fruits',
  HERBS = 'herbs',
  DAIRY = 'dairy',
  HONEY = 'honey',
  FLOWERS = 'flowers'
}

// üõí –ó–∞–∫–∞–∑
export interface Order {
  id: string;
  userId: string;
  items: CartItem[];
  total: number;
  status: OrderStatus;
  deliveryAddress: DeliveryAddress;
  paymentMethod: PaymentMethod;
  paymentId?: string;
  notes?: string;
  createdAt: Date;
  updatedAt: Date;
}

// üì¶ –≠–ª–µ–º–µ–Ω—Ç –∫–æ—Ä–∑–∏–Ω—ã
export interface CartItem {
  product: Product;
  quantity: number;
}

// üöö –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
export interface DeliveryAddress {
  name: string;
  phone: string;
  address: string;
  city: string;
  zipCode: string;
  notes?: string;
}

// üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
export enum PaymentMethod {
  CASH = 'cash',
  CARD = 'card',
  PAYPAL = 'paypal'
}

// üìã –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
export enum OrderStatus {
  PENDING = 'pending',
  CONFIRMED = 'confirmed',
  PREPARING = 'preparing',
  SHIPPING = 'shipping',
  DELIVERED = 'delivered',
  CANCELLED = 'cancelled'
}

// üõí –≠–ª–µ–º–µ–Ω—Ç –∫–æ—Ä–∑–∏–Ω—ã
export interface CartItem {
  product: Product;
  quantity: number;
}

// üè™ –§–µ—Ä–º–∞
export interface Farm {
  id: string;
  name: string;
  location: string;
  coordinates: {
    lat: number;
    lng: number;
  };
  description: string;
  contact: string;
  certified: boolean;
}

// üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
export interface User {
  id: string;
  name: string;
  email: string;
  phone: string;
  address: string;
  preferredLanguage: 'he' | 'en' | 'ru';
} 